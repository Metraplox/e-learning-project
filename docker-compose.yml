services:
  mongodb:
    image: mongo:latest
    container_name: elearning_mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:latest
    container_name: elearning_postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: courses_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:latest
    container_name: elearning_rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5

   #Servicios (comentados por ahora hasta que los desarrollemos)
  api-gateway:
    build: ./api-gateway
    container_name: elearning_gateway
    environment:
      - USERS_SERVICE_URL=http://users-service:3001
      - PORT=3000
    ports:
      - "3000:3000"
    depends_on:
      - users-service

  users-service:
    build: ./users-service
    container_name: elearning_users
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/users
      - RABBITMQ_URI=amqp://admin:admin123@rabbitmq:5672
      - JWT_SECRET=key-coder0$
      - PORT=3001
    ports:
      - "3001:3001"
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  # courses-service:
  #   build: ./courses-service
  #   ports:
  #     - "3002:3002"
  #   depends_on:
  #     - postgres
  #     - rabbitmq

volumes:
  mongodb_data:
  postgres_data: